{"version":3,"sources":["webpack://habiticaMarkdown/webpack/universalModuleDefinition","webpack://habiticaMarkdown/webpack/bootstrap","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/common/utils.js","webpack://habiticaMarkdown/./node_modules/uc.micro/categories/P/regex.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/ruler.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/token.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/common/entities.js","webpack://habiticaMarkdown/./node_modules/mdurl/index.js","webpack://habiticaMarkdown/./node_modules/uc.micro/properties/Any/regex.js","webpack://habiticaMarkdown/./node_modules/uc.micro/categories/Cc/regex.js","webpack://habiticaMarkdown/./node_modules/uc.micro/categories/Z/regex.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/common/html_re.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://habiticaMarkdown/./index.js","webpack://habiticaMarkdown/./node_modules/markdown-it/index.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/index.js","webpack://habiticaMarkdown/./node_modules/mdurl/encode.js","webpack://habiticaMarkdown/./node_modules/mdurl/decode.js","webpack://habiticaMarkdown/./node_modules/mdurl/format.js","webpack://habiticaMarkdown/./node_modules/mdurl/parse.js","webpack://habiticaMarkdown/./node_modules/uc.micro/index.js","webpack://habiticaMarkdown/./node_modules/uc.micro/categories/Cf/regex.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/helpers/index.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/renderer.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/parser_core.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/block.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/parser_block.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/table.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/code.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/list.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/parser_inline.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://habiticaMarkdown/./node_modules/linkify-it/index.js","webpack://habiticaMarkdown/./node_modules/linkify-it/lib/re.js","webpack://habiticaMarkdown/./node_modules/punycode/punycode.js","webpack://habiticaMarkdown/(webpack)/buildin/module.js","webpack://habiticaMarkdown/(webpack)/buildin/global.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/presets/default.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/presets/zero.js","webpack://habiticaMarkdown/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://habiticaMarkdown/./node_modules/markdown-it-linkify-images/index.js","webpack://habiticaMarkdown/./node_modules/markdown-it-link-attributes/index.js","webpack://habiticaMarkdown/./node_modules/habitica-markdown-emoji/index.js","webpack://habiticaMarkdown/./node_modules/markdown-it-emoji/index.js","webpack://habiticaMarkdown/./node_modules/markdown-it-emoji/lib/data/shortcuts.js","webpack://habiticaMarkdown/./node_modules/markdown-it-emoji/lib/render.js","webpack://habiticaMarkdown/./node_modules/markdown-it-emoji/lib/replace.js","webpack://habiticaMarkdown/./node_modules/markdown-it-emoji/lib/normalize_opts.js","webpack://habiticaMarkdown/./node_modules/habitica-markdown-emoji/lib/parse-emoji.js","webpack://habiticaMarkdown/./node_modules/habitica-markdown-emoji/lib/shortcuts.js","webpack://habiticaMarkdown/./node_modules/habitica-markdown-emoji/lib/custom-emojis.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_hasOwnProperty","has","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","assign","obj","sources","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","Ruler","this","__rules__","__cache__","__find__","length","__compile__","self","chains","rule","enabled","alt","altName","push","chain","fn","at","options","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","attrGet","attrJoin","encode","decode","format","parse","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","j","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","start","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","markdownit","linkifyImagesPlugin","linkAttributesPlugin","emojiPlugin","createMdInstance","mdOptions","linkify","use","target","rel","linkClass","imgClass","md","mdUnsafe","html","unsafeHTMLRender","markdown","render","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","MarkdownIt","presetName","inline","core","renderer","configure","set","presets","components","rules","ruler","rules2","ruler2","missed","filter","plugin","args","apply","env","State","process","parseInline","inlineMode","renderInline","encodeCache","string","exclude","keepEscaped","nextCode","cache","defaultChars","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","split","simplePath","exec","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","unshift","join","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","eMarks","escapedSplit","escapes","backTicked","lastBackTick","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","tShift","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","wasOutdented","oldLineMax","bsCount","parentType","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_SEQUENCES","StateBlock","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","shift","__last_index__","__schema__","raw","createMatch","schemas","reduce","acc","add","definition","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","arr","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","nodeType","freeGlobal","global","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","out","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","webpackPolyfill","deprecate","paths","g","Function","e","generateClass","className","srcIndex","caption","generateTargetAttribute","markdownitLinkAttributes","configs","freeze","defaultRender","link_open","pattern","findFirstMatchingConfig","attributes","attr","applyAttributes","markdownitEmoji","parseEmoji","shortcuts","customEmojis","defs","emoji","emojies_defs","emojies_shortcuts","emoji_html","emoji_replace","normalize_opts","defaults","scanRE","replaceRE","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","emojies","ucm","ZPCc","splitTextToken","last_pos","emoji_name","autolinkLevel","names","specialCases","watch","boat","book","boom","car","couple","email","exclamation","facepunch","family","feet","flipper","hand","hankey","hocho","honeybee","lantern","memo","moon","phone","running","shit","uk","unicodeSet","emojis","defaultEmojis","JSON","stringify"],"mappings":"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","file":"habitica-markdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"habiticaMarkdown\"] = factory();\n\telse\n\t\troot[\"habiticaMarkdown\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","const markdownit = require('markdown-it');\nconst linkifyImagesPlugin = require('markdown-it-linkify-images');\nconst linkAttributesPlugin = require('markdown-it-link-attributes');\nconst emojiPlugin = require('habitica-markdown-emoji');\n\nfunction createMdInstance (options) {\n  const mdOptions = options || {};\n  mdOptions.linkify = mdOptions.linkify || true;\n\n  const md = markdownit(mdOptions)\n    .use(linkAttributesPlugin, {\n      attrs: {\n        target: '_blank',\n        rel: 'noopener',\n      },\n    })\n    .use(linkifyImagesPlugin, {\n      target: '_blank',\n      linkClass: 'markdown-img-link',\n      imgClass: 'markdown-img',\n    })\n    .use(emojiPlugin);\n\n  return md;\n}\n\nconst md = createMdInstance();\nconst mdUnsafe = createMdInstance({\n  html: true,\n});\n\nmd.unsafeHTMLRender = function unsafeHTMLRender (markdown) {\n  return mdUnsafe.render(markdown);\n};\n\nmodule.exports = md;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n          // en-dash\n          .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n          .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open &&\n          opener.end < 0 &&\n          opener.level === closer.level) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,4}[a-zA-Z0-9%/]|' + // github has ... in commit range links,\n                                     // google has .... in links (issue #66)\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +      // allow `,,,` in paths\n          '\\\\!(?!' + re.src_ZCc + '|[!]).|' +\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","'use strict'\n\nfunction markdownitLinkifyImages (md, config) {\n  md.renderer.rules.image = function (tokens, idx, options, env, self) {\n    config = config || {}\n\n    var token = tokens[idx]\n    var srcIndex = token.attrIndex('src')\n    var url = token.attrs[srcIndex][1]\n    var title = ''\n    var caption = md.utils.escapeHtml(token.content)\n\n    var target = generateTargetAttribute(config.target)\n    var linkClass = generateClass(config.linkClass)\n    var imgClass = generateClass(config.imgClass)\n\n    if (token.attrIndex('title') !== -1) {\n      title = ' title=\"' + md.utils.escapeHtml(token.attrs[token.attrIndex('title')][1]) + '\"'\n    }\n\n    return '' +\n      '<a href=\"' + url + '\"' + linkClass + target + '>' +\n        '<img src=\"' + url + '\" alt=\"' + caption + '\"' + imgClass + title + '>' +\n      '</a>'\n  }\n}\n\nfunction generateTargetAttribute (target) {\n  target = target || '_self'\n\n  return ' target=\"' + target + '\"'\n}\n\nfunction generateClass (className) {\n  if (!className) return ''\n\n  return ' class=\"' + className + '\"'\n}\n\nmodule.exports = markdownitLinkifyImages\n","'use strict'\n\n// Adapted from https://github.com/markdown-it/markdown-it/blob/fbc6b0fed563ba7c00557ab638fd19752f8e759d/docs/architecture.md\n\nfunction findFirstMatchingConfig (link, configs) {\n  var i, config\n  var href = link.attrs[link.attrIndex('href')][1]\n\n  for (i = 0; i < configs.length; ++i) {\n    config = configs[i]\n\n    // if there is no pattern, config matches for all links\n    // otherwise, only return config if href matches the pattern set\n    if (!config.pattern || new RegExp(config.pattern).test(href)) {\n      return config\n    }\n  }\n}\n\nfunction applyAttributes (idx, tokens, attributes) {\n  Object.keys(attributes).forEach(function (attr) {\n    var attrIndex\n    var value = attributes[attr]\n\n    if (attr === 'className') {\n      // when dealing with applying classes\n      // programatically, some programmers\n      // may prefer to use the className syntax\n      attr = 'class'\n    }\n\n    attrIndex = tokens[idx].attrIndex(attr)\n\n    if (attrIndex < 0) { // attr doesn't exist, add new attribute\n      tokens[idx].attrPush([attr, value])\n    } else { // attr already exists, overwrite it\n      tokens[idx].attrs[attrIndex][1] = value // replace value of existing attr\n    }\n  })\n}\n\nfunction markdownitLinkAttributes (md, configs) {\n  if (!configs) {\n    configs = []\n  } else {\n    configs = Array.isArray(configs) ? configs : [configs]\n  }\n\n  Object.freeze(configs)\n\n  var defaultRender = md.renderer.rules.link_open || this.defaultRender\n\n  md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n    var config = findFirstMatchingConfig(tokens[idx], configs)\n    var attributes = config && config.attrs\n\n    if (attributes) {\n      applyAttributes(idx, tokens, attributes)\n    }\n\n    // pass token to default renderer.\n    return defaultRender(tokens, idx, options, env, self)\n  }\n}\n\nmarkdownitLinkAttributes.defaultRender = function (tokens, idx, options, env, self) {\n  return self.renderToken(tokens, idx, options)\n}\n\nmodule.exports = markdownitLinkAttributes\n","'use strict';\n\nvar markdownitEmoji = require('markdown-it-emoji');\n\nvar parseEmoji = require('./lib/parse-emoji');\nvar shortcuts = require('./lib/shortcuts');\nvar customEmojis = require('./lib/custom-emojis');\n\n// https://github.com/markdown-it/markdown-it-emoji/tree/4d5f6af1b6efb0975dae2ac51dbe6252636724aa#change-output\nfunction emojiPlugin (md) {\n  md.use(markdownitEmoji, {\n    defs: customEmojis,\n    shortcuts: shortcuts,\n  });\n\n  md.renderer.rules.emoji = function markdownEmojiRules (token, idx) {\n    var src;\n    var style;\n    var emoji = token[idx].markup;\n\n    emoji = parseEmoji(emoji);\n\n    src = 'https://s3.amazonaws.com/habitica-assets/cdn/emoji/' + emoji + '.png';\n    style = 'height: 1.5em; width: 1.5em';\n\n    return '<img class=\"habitica-emoji\" style=\"' + style + '\" src=\"' + src + '\" alt=\"' + emoji + '\">';\n  };\n}\n\nmodule.exports = emojiPlugin;\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  // Compile regexp\n  var names = Object.keys(emojies)\n                .map(function (name) { return ':' + name + ':'; })\n                .concat(Object.keys(shortcuts))\n                .sort()\n                .reverse()\n                .map(function (name) { return quoteRE(name); })\n                .join('|');\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","'use strict';\n\nvar specialCases = {\n  watch: 'watch-icon', // Firefox has a watch function on the object prototype - see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/watch\n\n  '+1': 'thumbsup', // NOTE: s3 urls can't have a + sign in them, so if we ever reverse this, keep that in mind\n  '-1': 'thumbsdown',\n  boat: 'sailboat',\n  book: 'open_book',\n  boom: 'collision',\n  car: 'red_car',\n  couple: 'man_and_woman_holding_hands',\n  email: 'envelope',\n  exclamation: 'heavy_exclamation_mark',\n  facepunch: 'punch',\n  family: 'man-woman-boy',\n  feet: 'paw_prints',\n  flipper: 'dolphin',\n  hand: 'raised_hand',\n  hankey: 'poop',\n  hocho: 'knife',\n  honeybee: 'bee',\n  lantern: 'izakaya_lantern',\n  laughing: 'satisfied',\n  memo: 'pencil',\n  moon: 'waxing_gibbous_moon',\n  phone: 'telephone',\n  running: 'runner',\n  shit: 'poop',\n  uk: 'gb',\n};\n\nmodule.exports = function parseEmoji (emoji) {\n  if (emoji in specialCases) {\n    emoji = specialCases[emoji];\n  }\n\n  return emoji;\n};\n","'use strict';\n\nvar unicodeSet = require('markdown-it-emoji/lib/data/full.json');\n\nvar shortcuts = {};\n\nObject.keys(unicodeSet).forEach(function addKey (key) {\n  var emojis = unicodeSet[key];\n\n  if (key === 'watch') {\n    // Special handling for Firefox where watch is on the object prototype - see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/watch\n    shortcuts[key] = [];\n  } else {\n    shortcuts[key] = shortcuts[key] || [];\n  }\n\n  if (typeof emojis === 'string') {\n    emojis = [emojis];\n  }\n\n  shortcuts[key].push.apply(shortcuts[key], emojis); // eslint-disable-line prefer-spread\n});\n\nmodule.exports = shortcuts;\n","var defaultEmojis = require('markdown-it-emoji/lib/data/full.json');\nvar emojis = JSON.parse(JSON.stringify(defaultEmojis));\nvar customEmojis = [\n  'bowtie',\n  'melior',\n  'metal',\n  'neckbeard',\n  'octocat',\n  'shipit',\n  'squirrel',\n  'trollface',\n];\n\ncustomEmojis.forEach(function addToEmojis (emoji) {\n  emojis[emoji] = emoji;\n});\n\nmodule.exports = emojis;\n"],"sourceRoot":""}